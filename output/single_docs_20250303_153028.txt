[{'index': 0, 'error': True, 'tags': ['error'], 'content': ['{\n    "id": 1,\n    "docs_id": 1,\n    "type": "function",\n    "name": "extend_to",\n    "description": "Creates a SizeExtensionConstraint that extends this object along a specified axis until it reaches another object or the simulation boundary. The extension can be in either positive or negative direction.",\n    "signature": "extend_to(self, other: Optional[\\"SimulationObject\\"], axis: int, direction: Literal[\\"+\\", \\"-\\"], other_position: float | None = None, offset: float = 0, grid_offset: int = 0) -> SizeExtensionConstraint",\n    "parameters": [\n      {\n        "name": "other",\n        "type": "Optional[SimulationObject]",\n        "docs_id": 2,\n        "description": "Target object to extend to, or None to extend to simulation boundary",\n        "default_value": null,\n        "is_optional": true\n      },\n      {\n        "name": "axis",\n        "type": "int",\n        "docs_id": 3,\n        "description": "Which axis to extend along (0, 1, or 2)",\n        "default_value": null,\n        "is_optional": false\n      },\n      {\n        "name": "direction",\n        "type": "Literal[\\"+\\", \\"-\\"]",\n        "docs_id": 4,\n        "description": "Direction to extend in (\\\'+\\\' or \\\'-\\\')",\n        "default_value": null,\n        "is_optional": false\n      },\n      {\n        "name": "other_position",\n        "type": "float | None",\n        "docs_id": 5,\n        "description": "Relative position on target object (-1 to 1) to extend to. If None, defaults to the corresponding side (-1 for \\\'+\\\' direction, 1 for \\\'-\\\' direction)",\n        "default_value": "None",\n        "is_optional": true\n      },\n      {\n        "name": "offset",\n        "type": "float",\n        "docs_id": 6,\n        "description": "Additional offset in meters to apply after extension. Ignored when extending to simulation boundary",\n        "default_value": "0",\n        "is_optional": true\n      },\n      {\n        "name": "grid_offset",\n        "type": "int",\n        "docs_id": 7,\n        "description": "Additional offset in Yee-grid voxels to apply after extension. Ignored when extending to simulation boundary",\n        "default_value": "0",\n        "is_optional": true\n      }\n    ],\n    "examples": [],\n    "url": "https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.extend_to>"\n  }']}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'face_to_face_negative_direction', 'description': 'Creates a PositionConstraint that places this object facing another object in the negative direction of specified axes. The objects will touch at their facing boundaries unless margins are specified.', 'signature': 'face_to_face_negative_direction(self, other: "SimulationObject", axes: tuple[int, ...] | int, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 2, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 3, 'description': 'Either a single integer or a tuple describing which axes to align on', 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 4, 'description': 'Additional margins in meters between the facing surfaces. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 5, 'description': 'Additional margins in Yee-grid voxels between the facing surfaces. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.face_to_face_negative_direction>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.object', 'description': 'Core classes for FDTD simulation objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'SimulationObject', 'description': 'Base class for all simulation objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'function', 'name': 'extend_to', 'description': 'Extend the object to a specified size.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.extend_to', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 4, 'type': 'function', 'name': 'face_to_face_negative_direction', 'description': 'Place the object face-to-face in the negative direction.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.face_to_face_negative_direction', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 5, 'type': 'function', 'name': 'face_to_face_positive_direction', 'description': 'Place the object face-to-face in the positive direction.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.face_to_face_positive_direction', 'error': False}, {'id': 6, 'module_id': 1, 'docs_id': 6, 'type': 'function', 'name': 'place_above', 'description': 'Place the object above another object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_above', 'error': False}, {'id': 7, 'module_id': 1, 'docs_id': 7, 'type': 'function', 'name': 'place_at_center', 'description': 'Place the object at the center of the simulation.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_at_center', 'error': False}, {'id': 8, 'module_id': 1, 'docs_id': 8, 'type': 'function', 'name': 'place_below', 'description': 'Place the object below another object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_below', 'error': False}, {'id': 9, 'module_id': 1, 'docs_id': 9, 'type': 'function', 'name': 'place_relative_to', 'description': 'Place the object relative to another object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_relative_to', 'error': False}, {'id': 10, 'module_id': 1, 'docs_id': 10, 'type': 'function', 'name': 'same_position_and_size', 'description': "Set the object's position and size to be the same as another object.", 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.same_position_and_size', 'error': False}, {'id': 11, 'module_id': 1, 'docs_id': 11, 'type': 'function', 'name': 'same_size', 'description': "Set the object's size to be the same as another object.", 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.same_size', 'error': False}, {'id': 12, 'module_id': 1, 'docs_id': 12, 'type': 'function', 'name': 'set_grid_coordinates', 'description': "Set the object's grid coordinates.", 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.set_grid_coordinates', 'error': False}, {'id': 13, 'module_id': 1, 'docs_id': 13, 'type': 'function', 'name': 'set_real_coordinates', 'description': "Set the object's real-world coordinates.", 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.set_real_coordinates', 'error': False}, {'id': 14, 'module_id': 1, 'docs_id': 14, 'type': 'function', 'name': 'size_relative_to', 'description': "Set the object's size relative to another object.", 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.size_relative_to', 'error': False}, {'id': 15, 'module_id': 1, 'docs_id': 15, 'type': 'class', 'name': 'UniqueName', 'description': 'Helper class to ensure unique names for objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName', 'error': False}, {'id': 16, 'module_id': 1, 'docs_id': 16, 'type': 'function', 'name': '__call__', 'description': 'Generate a unique name.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName.__call__', 'error': False}, {'id': 17, 'module_id': 1, 'docs_id': 17, 'type': 'class', 'name': 'PositionConstraint', 'description': 'Base class for position constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.PositionConstraint', 'error': False}, {'id': 18, 'module_id': 1, 'docs_id': 18, 'type': 'class', 'name': 'SizeConstraint', 'description': 'Base class for size constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SizeConstraint', 'error': False}, {'id': 19, 'module_id': 1, 'docs_id': 19, 'type': 'class', 'name': 'SizeExtensionConstraint', 'description': 'Base class for size extension constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SizeExtensionConstraint', 'error': False}, {'id': 20, 'module_id': 1, 'docs_id': 20, 'type': 'class', 'name': 'GridCoordinateConstraint', 'description': 'Base class for grid coordinate constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.GridCoordinateConstraint', 'error': False}, {'id': 21, 'module_id': 1, 'docs_id': 21, 'type': 'class', 'name': 'RealCoordinateConstraint', 'description': 'Base class for real-world coordinate constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.RealCoordinateConstraint', 'error': False}, {'id': 22, 'module_id': 1, 'docs_id': 22, 'type': 'module', 'name': 'fdtdx.objects.wavelength', 'description': 'Classes for wavelength-dependent objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/', 'error': False}, {'id': 23, 'module_id': 22, 'docs_id': 23, 'type': 'class', 'name': 'WaveLengthDependentObject', 'description': 'Base class for wavelength-dependent objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject', 'error': False}, {'id': 24, 'module_id': 22, 'docs_id': 24, 'type': 'function', 'name': 'frequency', 'description': 'Get the frequency of the object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.frequency', 'error': False}, {'id': 25, 'module_id': 22, 'docs_id': 25, 'type': 'function', 'name': 'period', 'description': 'Get the period of the object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.period', 'error': False}, {'id': 26, 'module_id': 22, 'docs_id': 26, 'type': 'function', 'name': 'wavelength', 'description': 'Get the wavelength of the object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.wavelength', 'error': False}, {'id': 27, 'module_id': 22, 'docs_id': 27, 'type': 'class', 'name': 'WaveLengthDependentNoMaterial', 'description': 'Wavelength-dependent object with no material properties.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial', 'error': False}, {'id': 28, 'module_id': 22, 'docs_id': 28, 'type': 'function', 'name': 'get_inv_permeability', 'description': 'Get the inverse permeability of the object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permeability', 'error': False}, {'id': 29, 'module_id': 22, 'docs_id': 29, 'type': 'function', 'name': 'get_inv_permittivity', 'description': 'Get the inverse permittivity of the object.', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permittivity', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'face_to_face_positive_direction', 'description': 'Creates a PositionConstraint that places this object facing another object in the positive direction of specified axes. The objects will touch at their facing boundaries unless margins are specified.', 'signature': 'face_to_face_positive_direction(self, other: "SimulationObject", axes: tuple[int, ...] | int, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 2, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 3, 'description': 'Either a single integer or a tuple describing which axes to align on', 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 4, 'description': 'Additional margins in meters between the facing surfaces. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 5, 'description': 'Additional margins in Yee-grid voxels between the facing surfaces. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.face_to_face_positive_direction>', 'error': False}, {'id': 2, 'docs_id': 6, 'type': 'function', 'name': 'place_above', 'description': 'Creates a PositionConstraint that places this object above another object along the z-axis. This is a convenience wrapper around face_to_face_positive_direction() for axis 2 (z-axis).', 'signature': 'place_above(self, other: "SimulationObject", margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 7, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 8, 'description': 'Additional vertical margins in meters between objects. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 9, 'description': 'Additional vertical margins in Yee-grid voxels between objects. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_above>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.object', 'description': 'Base classes for objects in the FDTD simulation.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'SimulationObject', 'description': 'Base class for all objects in the FDTD simulation.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'function', 'name': 'extend_to', 'description': 'Extends the object to a specified size.', 'signature': 'extend_to(self, size)', 'parameters': [{'name': 'size', 'type': 'tuple', 'docs_id': 4, 'description': 'The new size of the object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.extend_to', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 5, 'type': 'function', 'name': 'face_to_face_negative_direction', 'description': 'Places the object face-to-face with another object in the negative direction.', 'signature': 'face_to_face_negative_direction(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 6, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.face_to_face_negative_direction', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 7, 'type': 'function', 'name': 'face_to_face_positive_direction', 'description': 'Places the object face-to-face with another object in the positive direction.', 'signature': 'face_to_face_positive_direction(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 8, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.face_to_face_positive_direction', 'error': False}, {'id': 6, 'module_id': 1, 'docs_id': 9, 'type': 'function', 'name': 'place_above', 'description': 'Places the object above another object.', 'signature': 'place_above(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 10, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_above', 'error': False}, {'id': 7, 'module_id': 1, 'docs_id': 11, 'type': 'function', 'name': 'place_at_center', 'description': 'Places the object at the center of the simulation.', 'signature': 'place_at_center(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_at_center', 'error': False}, {'id': 8, 'module_id': 1, 'docs_id': 12, 'type': 'function', 'name': 'place_below', 'description': 'Places the object below another object.', 'signature': 'place_below(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 13, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_below', 'error': False}, {'id': 9, 'module_id': 1, 'docs_id': 14, 'type': 'function', 'name': 'place_relative_to', 'description': 'Places the object relative to another object.', 'signature': 'place_relative_to(self, other, position)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 15, 'description': 'The other object.', 'default_value': None, 'is_optional': False}, {'name': 'position', 'type': 'tuple', 'docs_id': 16, 'description': 'The relative position.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.place_relative_to', 'error': False}, {'id': 10, 'module_id': 1, 'docs_id': 17, 'type': 'function', 'name': 'same_position_and_size', 'description': 'Sets the object to have the same position and size as another object.', 'signature': 'same_position_and_size(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 18, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.same_position_and_size', 'error': False}, {'id': 11, 'module_id': 1, 'docs_id': 19, 'type': 'function', 'name': 'same_size', 'description': 'Sets the object to have the same size as another object.', 'signature': 'same_size(self, other)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 20, 'description': 'The other object.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.same_size', 'error': False}, {'id': 12, 'module_id': 1, 'docs_id': 21, 'type': 'function', 'name': 'set_grid_coordinates', 'description': 'Sets the grid coordinates of the object.', 'signature': 'set_grid_coordinates(self, coordinates)', 'parameters': [{'name': 'coordinates', 'type': 'tuple', 'docs_id': 22, 'description': 'The grid coordinates.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.set_grid_coordinates', 'error': False}, {'id': 13, 'module_id': 1, 'docs_id': 23, 'type': 'function', 'name': 'set_real_coordinates', 'description': 'Sets the real coordinates of the object.', 'signature': 'set_real_coordinates(self, coordinates)', 'parameters': [{'name': 'coordinates', 'type': 'tuple', 'docs_id': 24, 'description': 'The real coordinates.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.set_real_coordinates', 'error': False}, {'id': 14, 'module_id': 1, 'docs_id': 25, 'type': 'function', 'name': 'size_relative_to', 'description': 'Sets the size of the object relative to another object.', 'signature': 'size_relative_to(self, other, factor)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 26, 'description': 'The other object.', 'default_value': None, 'is_optional': False}, {'name': 'factor', 'type': 'float', 'docs_id': 27, 'description': 'The relative size factor.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SimulationObject.size_relative_to', 'error': False}, {'id': 15, 'module_id': 1, 'docs_id': 28, 'type': 'class', 'name': 'UniqueName', 'description': 'A class to generate unique names.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName', 'error': False}, {'id': 16, 'module_id': 1, 'docs_id': 29, 'type': 'function', 'name': '__call__', 'description': 'Generates a unique name.', 'signature': '__call__(self, name)', 'parameters': [{'name': 'name', 'type': 'str', 'docs_id': 30, 'description': 'The base name.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName.__call__', 'error': False}, {'id': 17, 'module_id': 1, 'docs_id': 31, 'type': 'class', 'name': 'PositionConstraint', 'description': 'Base class for position constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.PositionConstraint', 'error': False}, {'id': 18, 'module_id': 1, 'docs_id': 32, 'type': 'class', 'name': 'SizeConstraint', 'description': 'Base class for size constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SizeConstraint', 'error': False}, {'id': 19, 'module_id': 1, 'docs_id': 33, 'type': 'class', 'name': 'SizeExtensionConstraint', 'description': 'Base class for size extension constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.SizeExtensionConstraint', 'error': False}, {'id': 20, 'module_id': 1, 'docs_id': 34, 'type': 'class', 'name': 'GridCoordinateConstraint', 'description': 'Base class for grid coordinate constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.GridCoordinateConstraint', 'error': False}, {'id': 21, 'module_id': 1, 'docs_id': 35, 'type': 'class', 'name': 'RealCoordinateConstraint', 'description': 'Base class for real coordinate constraints.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.RealCoordinateConstraint', 'error': False}, {'id': 22, 'module_id': 1, 'docs_id': 36, 'type': 'class', 'name': 'WaveLengthDependentObject', 'description': 'Base class for wavelength-dependent objects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject', 'error': False}, {'id': 23, 'module_id': 1, 'docs_id': 37, 'type': 'function', 'name': 'frequency', 'description': 'Returns the frequency of the object.', 'signature': 'frequency(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.frequency', 'error': False}, {'id': 24, 'module_id': 1, 'docs_id': 38, 'type': 'function', 'name': 'period', 'description': 'Returns the period of the object.', 'signature': 'period(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.period', 'error': False}, {'id': 25, 'module_id': 1, 'docs_id': 39, 'type': 'function', 'name': 'wavelength', 'description': 'Returns the wavelength of the object.', 'signature': 'wavelength(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentObject.wavelength', 'error': False}, {'id': 26, 'module_id': 1, 'docs_id': 40, 'type': 'class', 'name': 'WaveLengthDependentNoMaterial', 'description': 'A wavelength-dependent object with no material.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial', 'error': False}, {'id': 27, 'module_id': 1, 'docs_id': 41, 'type': 'function', 'name': 'get_inv_permeability', 'description': 'Returns the inverse permeability of the object.', 'signature': 'get_inv_permeability(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permeability', 'error': False}, {'id': 28, 'module_id': 1, 'docs_id': 42, 'type': 'function', 'name': 'get_inv_permittivity', 'description': 'Returns the inverse permittivity of the object.', 'signature': 'get_inv_permittivity(self)', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permittivity', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'place_below', 'description': 'Creates a PositionConstraint that places this object below another object along the z-axis. This is a convenience wrapper around face_to_face_negative_direction() for axis 2 (z-axis).', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_below>', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 2, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 3, 'description': 'Additional vertical margins in meters between objects. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 4, 'description': 'Additional vertical margins in Yee-grid voxels between objects. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'signature': 'place_below(self, other: "SimulationObject", margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint:', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.object', 'description': 'Module containing base classes for FDTD objects.', 'url': None, 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'SimulationObject', 'description': 'Base class for all objects in the FDTD simulation.', 'url': None, 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'class', 'name': 'PositionConstraint', 'description': 'Class representing a constraint on the position of an object.', 'url': None, 'error': False}, {'id': 4, 'module_id': 1, 'class_id': 2, 'docs_id': 4, 'type': 'function', 'name': 'place_at_center', 'description': 'Creates a PositionConstraint that centers this object relative to another object along specified axes. This is a convenience wrapper around place_relative_to() with default positions at the center (0).', 'signature': 'place_at_center(other, axes=(0, 1, 2), own_positions=None, other_positions=None, margins=None, grid_margins=None)', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 5, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 6, 'description': 'Either a single integer or a tuple describing which axes to center on. Defaults to all axes (0, 1, 2)', 'default_value': '(0, 1, 2)', 'is_optional': True}, {'name': 'own_positions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 7, 'description': 'Relative positions on this object (-1 to 1). If None, defaults to center (0)', 'default_value': 'None', 'is_optional': True}, {'name': 'other_positions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 8, 'description': 'Relative positions on other object (-1 to 1). If None, defaults to center (0)', 'default_value': 'None', 'is_optional': True}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 9, 'description': 'Additional margins in meters between objects. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 10, 'description': 'Additional margins in Yee-grid voxels between objects. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_at_center>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'place_relative_to', 'description': 'Creates a PositionalConstraint between two objects. The constraint is defined by anchor points on both objects, which are constrainted to be at the same position. Anchors are defined in relative coordinates, i.e. a position of -1 is the left object boundary in the repective axis and a position of +1 the right boundary.', 'signature': 'place_relative_to(self, other: "SimulationObject", axes: tuple[int, ...] | int, own_positions: tuple[float, ...] | float, other_positions: tuple[float, ...] | float, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 2, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 3, 'description': 'Eiter a single integer or a tuple describing the axes of the constraints', 'default_value': None, 'is_optional': False}, {'name': 'own_positions', 'type': 'tuple[float, ...] | float', 'docs_id': 4, 'description': 'The positions of the own anchor in the axes. Must have the same lengths as axes', 'default_value': None, 'is_optional': False}, {'name': 'other_positions', 'type': 'tuple[float, ...] | float', 'docs_id': 5, 'description': "The positions of the other objects' anchor in the axes. Must have the same lengths as axes", 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 6, 'description': 'The margins between the anchors of both objects in meters. Must have the same lengths as axes. Defaults to no margin', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 7, 'description': 'The margins between the anchors of both objects in Yee-grid voxels. Must have the same lengths as axes. Defaults to no margin', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_relative_to>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'same_position_and_size', 'description': "Creates both position and size constraints to make this object match another object's position and size. This is a convenience wrapper combining place_at_center() and same_size().", 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.same_position_and_size>', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 2, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 3, 'description': 'Either a single integer or a tuple describing which axes to match. Defaults to all axes (0, 1, 2)', 'default_value': '(0, 1, 2)', 'is_optional': True}], 'examples': [], 'signature': 'same_position_and_size(\n  self,\n  other: \\"SimulationObject\\",\n  axes: tuple[int, ...] | int = (0, 1, 2),\n) -> tuple[PositionConstraint, SizeConstraint]:\n', 'error': False}, {'id': 2, 'docs_id': 4, 'type': 'function', 'name': 'same_size', 'description': 'Creates a SizeConstraint that makes this object the same size as another object along specified axes. This is a convenience wrapper around size_relative_to() with proportions set to 1.0.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.same_size>', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 5, 'description': 'Another object in the simulation scene', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 6, 'description': 'Either a single integer or a tuple describing which axes should have the same size. Defaults to all axes (0, 1, 2)', 'default_value': '(0, 1, 2)', 'is_optional': True}, {'name': 'offsets', 'type': 'tuple[float, ...] | float | None', 'docs_id': 7, 'description': 'Additional size offsets in meters to apply. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_offsets', 'type': 'tuple[int, ...] | int | None', 'docs_id': 8, 'description': 'Additional size offsets in Yee-grid voxels to apply. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'signature': 'same_size(\n  self,\n  other: \\"SimulationObject\\",\n  axes: tuple[int, ...] | int = (0, 1, 2),\n  offsets: tuple[float, ...] | float | None = None,\n  grid_offsets: tuple[int, ...] | int | None = None,\n) -> SizeConstraint:\n', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'set_grid_coordinates', 'description': 'Creates a GridCoordinateConstraint that forces specific sides of this object to align with given grid coordinates. Used for precise positioning in the discretized simulation space.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.set_grid_coordinates>', 'signature': 'set_grid_coordinates(\n  self,\n  axes: tuple[int, ...] | int,\n  sides: tuple[Literal["+", "-"], ...] | Literal["+", "-"],\n  coordinates: tuple[int, ...] | int,\n) -> GridCoordinateConstraint:', 'parameters': [{'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 2, 'description': 'Either a single integer or a tuple describing which axes to constrain', 'default_value': None, 'is_optional': False}, {'name': 'sides', 'type': 'tuple[Literal["+", "-"], ...] | Literal["+", "-"]', 'docs_id': 3, 'description': 'Either a single string or a tuple of strings ("+" or "-") indicating which side of each axis to constrain. Must have same length as axes', 'default_value': None, 'is_optional': False}, {'name': 'coordinates', 'type': 'tuple[int, ...] | int', 'docs_id': 4, 'description': 'Either a single integer or a tuple of integers specifying the grid coordinates to align with. Must have same length as axes', 'default_value': None, 'is_optional': False}], 'examples': [], 'module_id': None, 'class_id': None, 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 5, 'type': 'class', 'name': 'GridCoordinateConstraint', 'description': 'Constraint forcing alignment with specific grid coordinates', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.GridCoordinateConstraint>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'function', 'name': 'set_real_coordinates', 'description': 'Creates a RealCoordinateConstraint that forces specific sides of this object to align with given real-space coordinates. Used for precise positioning in physical units.', 'signature': 'set_real_coordinates(self, axes: tuple[int, ...] | int, sides: tuple[Literal["+", "-"], ...] | Literal["+", "-"], coordinates: tuple[float, ...] | float) -> RealCoordinateConstraint', 'parameters': [{'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 2, 'description': 'Either a single integer or a tuple describing which axes to constrain', 'default_value': None, 'is_optional': False}, {'name': 'sides', 'type': 'tuple[Literal["+", "-"], ...] | Literal["+", "-"]', 'docs_id': 3, 'description': 'Either a single string or a tuple of strings ("+" or "-") indicating which side of each axis to constrain. Must have same length as axes', 'default_value': None, 'is_optional': False}, {'name': 'coordinates', 'type': 'tuple[float, ...] | float', 'docs_id': 4, 'description': 'Either a single float or a tuple of floats specifying the real-space coordinates in meters to align with. Must have same length as axes', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.set_real_coordinates>', 'error': False}, {'id': 2, 'module_id': None, 'docs_id': 5, 'type': 'class', 'name': 'RealCoordinateConstraint', 'description': 'Constraint forcing alignment with specific real-space coordinates', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.RealCoordinateConstraint>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.object', 'description': 'Module containing SimulationObject and SizeConstraint classes, and the size_relative_to function.', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'SimulationObject', 'description': 'Base class for objects in the FDTD simulation.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject>', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'class', 'name': 'SizeConstraint', 'description': 'Represents a size constraint between two SimulationObjects.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SizeConstraint>', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 4, 'type': 'function', 'name': 'size_relative_to', 'description': 'Creates a SizeConstraint between two objects. The constraint defines the size of this object relative to another object, allowing for proportional scaling and offsets in specified axes.', 'signature': 'size_relative_to(self, other: "SimulationObject", axes: tuple[int, ...] | int, other_axes: tuple[int, ...] | int | None = None, proportions: tuple[float, ...] | float | None = None, offsets: tuple[float, ...] | float | None = None, grid_offsets: tuple[int, ...] | int | None = None) -> SizeConstraint', 'parameters': [{'name': 'other', 'type': 'SimulationObject', 'docs_id': 5, 'description': 'Another object in the simulation scene', 'default_value': '_required_', 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 6, 'description': 'Either a single integer or a tuple describing which axes of this object to constrain', 'default_value': '_required_', 'is_optional': False}, {'name': 'other_axes', 'type': 'tuple[int, ...] | int | None', 'docs_id': 7, 'description': "Either a single integer or a tuple describing which axes of the other object to reference. If None, uses the same axes as specified in 'axes'", 'default_value': 'None', 'is_optional': True}, {'name': 'proportions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 8, 'description': "Scale factors to apply to the other object's dimensions. Must have same length as axes. If None, defaults to 1.0 (same size)", 'default_value': 'None', 'is_optional': True}, {'name': 'offsets', 'type': 'tuple[float, ...] | float | None', 'docs_id': 9, 'description': 'Additional size offsets in meters to apply after scaling. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}, {'name': 'grid_offsets', 'type': 'tuple[int, ...] | int | None', 'docs_id': 10, 'description': 'Additional size offsets in Yee-grid voxels to apply after scaling. Must have same length as axes. If None, defaults to 0', 'default_value': 'None', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.size_relative_to>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'class', 'name': 'SizeConstraint', 'description': 'Defines a size relationship between two simulation objects. A constraint that sets the size of one object relative to another, with optional proportions and offsets. Used to specify how objects should be sized relative to each other in the simulation.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SizeConstraint>', 'error': False}, {'id': 2, 'module_id': None, 'docs_id': 2, 'type': 'class', 'name': 'SizeExtensionConstraint', 'description': "Defines how an object extends toward another object or boundary. A constraint that extends one object's size until it reaches another object or the simulation boundary. Can extend in positive or negative direction along an axis.", 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SizeExtensionConstraint>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.object', 'description': 'Base class for all simulation objects with positioning and sizing capabilities.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'UniqueName', 'description': 'Generates unique names for simulation objects. A utility class that ensures each simulation object gets a unique name by maintaining a global counter. If no name is provided, generates names in the format "Object_N" where N is an incrementing counter.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'class_id': 2, 'type': 'function', 'name': '__call__', 'description': 'Generate a unique name if none is provided.', 'signature': '__call__(self, x: str | None) -> str', 'parameters': [{'name': 'x', 'type': 'str | None', 'docs_id': 4, 'description': 'The proposed name or None', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.UniqueName.__call__', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 5, 'type': 'class', 'name': 'PositionConstraint', 'description': 'Defines a positional relationship between two simulation objects. A constraint that positions one object relative to another, with optional margins and offsets. Used to specify how objects should be placed in the simulation volume relative to each other.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/#fdtdx.objects.object.PositionConstraint', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 6, 'class_id': 4, 'type': 'function', 'name': '__init__', 'description': 'Initializes PositionConstraint with given parameters', 'signature': None, 'parameters': [{'name': 'object', 'type': 'SimulationObject', 'docs_id': 7, 'description': 'The "child" object whose position is being adjusted', 'default_value': None, 'is_optional': False}, {'name': 'other_object', 'type': 'SimulationObject', 'docs_id': 8, 'description': 'The "parent" object that serves as reference', 'default_value': None, 'is_optional': False}, {'name': 'axes', 'type': 'tuple[int, ...]', 'docs_id': 9, 'description': 'Which axes (x,y,z) this constraint applies to', 'default_value': None, 'is_optional': False}, {'name': 'object_positions', 'type': 'tuple[float, ...]', 'docs_id': 10, 'description': 'Relative positions on child object (-1 to 1)', 'default_value': None, 'is_optional': False}, {'name': 'other_object_positions', 'type': 'tuple[float, ...]', 'docs_id': 11, 'description': 'Relative positions on parent object (-1 to 1)', 'default_value': None, 'is_optional': False}, {'name': 'margins', 'type': 'tuple[float, ...]', 'docs_id': 12, 'description': 'Optional real-space margins between objects', 'default_value': None, 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...]', 'docs_id': 13, 'description': 'Optional grid-space margins between objects', 'default_value': None, 'is_optional': True}], 'examples': [], 'url': None, 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'class', 'name': 'GridCoordinateConstraint', 'description': "Constrains an object's position to specific grid coordinates. Forces specific sides of an object to align with given grid coordinates. Used for precise positioning in the discretized simulation space.", 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.GridCoordinateConstraint>', 'error': False}, {'id': 2, 'module_id': None, 'docs_id': 2, 'type': 'class', 'name': 'RealCoordinateConstraint', 'description': "Constrains an object's position to specific real-space coordinates. Forces specific sides of an object to align with given real-space coordinates. Used for precise positioning in physical units.", 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.RealCoordinateConstraint>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects.wavelength', 'description': 'Module containing wavelength-dependent objects.', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'WaveLengthDependentObject', 'description': 'Base class for objects whose properties depend on wavelength/period. An abstract base class for simulation objects that have wavelength-dependent behavior. Provides properties to handle either wavelength or period specification, ensuring only one is set at a time.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject>', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'function', 'name': 'period', 'description': 'Gets the period in seconds.', 'signature': 'period(self) -> float', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.period>', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 4, 'type': 'function', 'name': 'wavelength', 'description': 'Gets the wavelength in meters.', 'signature': 'wavelength(self) -> float', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.wavelength>', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 5, 'type': 'function', 'name': 'frequency', 'description': 'Gets the frequency in Hz.', 'signature': 'frequency(self) -> float', 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.frequency>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'class', 'name': 'WaveLengthDependentObject', 'description': 'Base class for objects with wavelength/period-dependent properties.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject>', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'property', 'name': 'frequency', 'description': 'Gets the frequency in Hz.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.frequency>', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'property', 'name': 'period', 'description': 'Gets the period in seconds.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.period>', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 4, 'type': 'property', 'name': 'wavelength', 'description': 'Gets the wavelength in meters.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentObject.wavelength>', 'error': False}, {'id': 5, 'docs_id': 5, 'type': 'class', 'name': 'WaveLengthDependentNoMaterial', 'description': "A wavelength-dependent object that doesn't modify material properties. Implements WaveLengthDependentObject for cases where the object doesn't affect the permittivity or permeability of the simulation volume.", 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial>', 'error': False}, {'id': 6, 'module_id': 1, 'class_id': 5, 'docs_id': 6, 'type': 'function', 'name': 'get_inv_permittivity', 'description': 'Returns unchanged inverse permittivity.', 'signature': 'get_inv_permittivity(prev_inv_permittivity, params)', 'parameters': [{'name': 'prev_inv_permittivity', 'type': 'jax.Array', 'docs_id': 7, 'description': 'The existing inverse permittivity array', 'default_value': None, 'is_optional': False}, {'name': 'params', 'type': 'dict[str, jax.Array] | None', 'docs_id': 8, 'description': 'Optional parameter dictionary', 'default_value': None, 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permittivity>', 'error': False}, {'id': 7, 'module_id': 1, 'class_id': 5, 'docs_id': 9, 'type': 'function', 'name': 'get_inv_permeability', 'description': 'Returns unchanged inverse permeability.', 'signature': 'get_inv_permeability(prev_inv_permeability, params)', 'parameters': [{'name': 'prev_inv_permeability', 'type': 'Array', 'docs_id': 10, 'description': 'The existing inverse permeability array', 'default_value': None, 'is_optional': False}, {'name': 'params', 'type': 'dict[str, Array] | None', 'docs_id': 11, 'description': 'Optional parameter dictionary', 'default_value': None, 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.wavelength.WaveLengthDependentNoMaterial.get_inv_permeability>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.objects', 'description': 'Module containing base classes for simulation objects.', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'class', 'name': 'SimulationObject', 'description': 'Base class for all simulation objects.  Inherits from ExtendedTreeClass and ABC.', 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject>', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'function', 'name': 'get_inv_permittivity', 'description': 'Abstract method to get the inverse permittivity of the object.', 'signature': 'get_inv_permittivity(self, prev_inv_permittivity: jax.Array, params: dict[str, jax.Array] | None) -> tuple[jax.Array, dict]', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 4, 'description': 'The SimulationObject instance.'}, {'name': 'prev_inv_permittivity', 'type': 'jax.Array', 'docs_id': 5, 'description': 'Previous inverse permittivity.'}, {'name': 'params', 'type': 'dict[str, jax.Array] | None', 'docs_id': 6, 'description': 'Parameters for the calculation.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.get_inv_permittivity>', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 7, 'type': 'function', 'name': 'get_inv_permeability', 'description': 'Abstract method to get the inverse permeability of the object.', 'signature': 'get_inv_permeability(self, prev_inv_permeability: jax.Array, params: dict[str, jax.Array] | None) -> tuple[jax.Array, dict]', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 8, 'description': 'The SimulationObject instance.'}, {'name': 'prev_inv_permeability', 'type': 'jax.Array', 'docs_id': 9, 'description': 'Previous inverse permeability.'}, {'name': 'params', 'type': 'dict[str, jax.Array] | None', 'docs_id': 10, 'description': 'Parameters for the calculation.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.get_inv_permeability>', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 11, 'type': 'function', 'name': 'place_on_grid', 'description': 'Places the object on the simulation grid.', 'signature': 'place_on_grid(self: Self, grid_slice_tuple: SliceTuple3D, config: SimulationConfig, key: jax.Array) -> Self', 'parameters': [{'name': 'self', 'type': 'Self', 'docs_id': 12, 'description': 'The SimulationObject instance.'}, {'name': 'grid_slice_tuple', 'type': 'SliceTuple3D', 'docs_id': 13, 'description': 'Tuple defining the grid slice for placement.'}, {'name': 'config', 'type': 'SimulationConfig', 'docs_id': 14, 'description': 'Simulation configuration.'}, {'name': 'key', 'type': 'jax.Array', 'docs_id': 15, 'description': 'JAX random key.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_on_grid>', 'error': False}, {'id': 6, 'module_id': 1, 'docs_id': 16, 'type': 'function', 'name': 'place_relative_to', 'description': 'Creates a PositionConstraint between two objects.', 'signature': 'place_relative_to(self, other: "SimulationObject", axes: tuple[int, ...] | int, own_positions: tuple[float, ...] | float, other_positions: tuple[float, ...] | float, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 17, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 18, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 19, 'description': 'Axes of the constraints.'}, {'name': 'own_positions', 'type': 'tuple[float, ...] | float', 'docs_id': 20, 'description': 'Positions of the own anchor.'}, {'name': 'other_positions', 'type': 'tuple[float, ...] | float', 'docs_id': 21, 'description': "Positions of the other object's anchor."}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 22, 'description': 'Margins between anchors in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 23, 'description': 'Margins between anchors in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_relative_to>', 'error': False}, {'id': 7, 'module_id': 1, 'docs_id': 24, 'type': 'function', 'name': 'size_relative_to', 'description': 'Creates a SizeConstraint between two objects.', 'signature': 'size_relative_to(self, other: "SimulationObject", axes: tuple[int, ...] | int, other_axes: tuple[int, ...] | int | None = None, proportions: tuple[float, ...] | float | None = None, offsets: tuple[float, ...] | float | None = None, grid_offsets: tuple[int, ...] | int | None = None) -> SizeConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 25, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 26, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 27, 'description': 'Axes of this object to constrain.'}, {'name': 'other_axes', 'type': 'tuple[int, ...] | int | None', 'docs_id': 28, 'description': 'Axes of the other object to reference.', 'is_optional': True}, {'name': 'proportions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 29, 'description': 'Scale factors to apply.', 'is_optional': True}, {'name': 'offsets', 'type': 'tuple[float, ...] | float | None', 'docs_id': 30, 'description': 'Size offsets in meters.', 'is_optional': True}, {'name': 'grid_offsets', 'type': 'tuple[int, ...] | int | None', 'docs_id': 31, 'description': 'Size offsets in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.size_relative_to>', 'error': False}, {'id': 8, 'module_id': 1, 'docs_id': 32, 'type': 'function', 'name': 'same_size', 'description': 'Creates a SizeConstraint that makes this object the same size as another object.', 'signature': 'same_size(self, other: "SimulationObject", axes: tuple[int, ...] | int = (0, 1, 2), offsets: tuple[float, ...] | float | None = None, grid_offsets: tuple[int, ...] | int | None = None) -> SizeConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 33, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 34, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 35, 'description': 'Axes to have the same size.', 'default_value': '(0, 1, 2)'}, {'name': 'offsets', 'type': 'tuple[float, ...] | float | None', 'docs_id': 36, 'description': 'Size offsets in meters.', 'is_optional': True}, {'name': 'grid_offsets', 'type': 'tuple[int, ...] | int | None', 'docs_id': 37, 'description': 'Size offsets in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.same_size>', 'error': False}, {'id': 9, 'module_id': 1, 'docs_id': 38, 'type': 'function', 'name': 'place_at_center', 'description': 'Creates a PositionConstraint that centers this object relative to another object.', 'signature': 'place_at_center(self, other: "SimulationObject", axes: tuple[int, ...] | int = (0, 1, 2), own_positions: tuple[float, ...] | float | None = None, other_positions: tuple[float, ...] | float | None = None, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 39, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 40, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 41, 'description': 'Axes to center on.', 'default_value': '(0, 1, 2)'}, {'name': 'own_positions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 42, 'description': 'Relative positions on this object.', 'is_optional': True}, {'name': 'other_positions', 'type': 'tuple[float, ...] | float | None', 'docs_id': 43, 'description': 'Relative positions on other object.', 'is_optional': True}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 44, 'description': 'Margins in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 45, 'description': 'Margins in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_at_center>', 'error': False}, {'id': 10, 'module_id': 1, 'docs_id': 46, 'type': 'function', 'name': 'same_position_and_size', 'description': "Creates both position and size constraints to make this object match another object's position and size.", 'signature': 'same_position_and_size(self, other: "SimulationObject", axes: tuple[int, ...] | int = (0, 1, 2)) -> tuple[PositionConstraint, SizeConstraint]', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 47, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 48, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 49, 'description': 'Axes to match.', 'default_value': '(0, 1, 2)'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.same_position_and_size>', 'error': False}, {'id': 11, 'module_id': 1, 'docs_id': 50, 'type': 'function', 'name': 'face_to_face_positive_direction', 'description': 'Creates a PositionConstraint that places this object facing another object in the positive direction of specified axes.', 'signature': 'face_to_face_positive_direction(self, other: "SimulationObject", axes: tuple[int, ...] | int, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 51, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 52, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 53, 'description': 'Axes to align on.'}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 54, 'description': 'Margins in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 55, 'description': 'Margins in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.face_to_face_positive_direction>', 'error': False}, {'id': 12, 'module_id': 1, 'docs_id': 56, 'type': 'function', 'name': 'face_to_face_negative_direction', 'description': 'Creates a PositionConstraint that places this object facing another object in the negative direction of specified axes.', 'signature': 'face_to_face_negative_direction(self, other: "SimulationObject", axes: tuple[int, ...] | int, margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 57, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 58, 'description': 'Another object in the simulation scene.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 59, 'description': 'Axes to align on.'}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 60, 'description': 'Margins in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 61, 'description': 'Margins in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.face_to_face_negative_direction>', 'error': False}, {'id': 13, 'module_id': 1, 'docs_id': 62, 'type': 'function', 'name': 'place_above', 'description': 'Creates a PositionConstraint that places this object above another object along the z-axis.', 'signature': 'place_above(self, other: "SimulationObject", margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 63, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 64, 'description': 'Another object in the simulation scene.'}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 65, 'description': 'Vertical margins in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 66, 'description': 'Vertical margins in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_above>', 'error': False}, {'id': 14, 'module_id': 1, 'docs_id': 67, 'type': 'function', 'name': 'place_below', 'description': 'Creates a PositionConstraint that places this object below another object along the z-axis.', 'signature': 'place_below(self, other: "SimulationObject", margins: tuple[float, ...] | float | None = None, grid_margins: tuple[int, ...] | int | None = None) -> PositionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 68, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 69, 'description': 'Another object in the simulation scene.'}, {'name': 'margins', 'type': 'tuple[float, ...] | float | None', 'docs_id': 70, 'description': 'Vertical margins in meters.', 'is_optional': True}, {'name': 'grid_margins', 'type': 'tuple[int, ...] | int | None', 'docs_id': 71, 'description': 'Vertical margins in grid voxels.', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.place_below>', 'error': False}, {'id': 15, 'module_id': 1, 'docs_id': 72, 'type': 'function', 'name': 'set_grid_coordinates', 'description': 'Creates a GridCoordinateConstraint that forces specific sides of this object to align with given grid coordinates.', 'signature': 'set_grid_coordinates(self, axes: tuple[int, ...] | int, sides: tuple[Literal["+", "-"], ...] | Literal["+", "-"], coordinates: tuple[int, ...] | int) -> GridCoordinateConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 73, 'description': 'The SimulationObject instance.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 74, 'description': 'Axes to constrain.'}, {'name': 'sides', 'type': 'tuple[Literal["+", "-"], ...] | Literal["+", "-"]', 'docs_id': 75, 'description': 'Sides to constrain.'}, {'name': 'coordinates', 'type': 'tuple[int, ...] | int', 'docs_id': 76, 'description': 'Grid coordinates to align with.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.set_grid_coordinates>', 'error': False}, {'id': 16, 'module_id': 1, 'docs_id': 77, 'type': 'function', 'name': 'set_real_coordinates', 'description': 'Creates a RealCoordinateConstraint that forces specific sides of this object to align with given real-space coordinates.', 'signature': 'set_real_coordinates(self, axes: tuple[int, ...] | int, sides: tuple[Literal["+", "-"], ...] | Literal["+", "-"], coordinates: tuple[float, ...] | float) -> RealCoordinateConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 78, 'description': 'The SimulationObject instance.'}, {'name': 'axes', 'type': 'tuple[int, ...] | int', 'docs_id': 79, 'description': 'Axes to constrain.'}, {'name': 'sides', 'type': 'tuple[Literal["+", "-"], ...] | Literal["+", "-"]', 'docs_id': 80, 'description': 'Sides to constrain.'}, {'name': 'coordinates', 'type': 'tuple[float, ...] | float', 'docs_id': 81, 'description': 'Real-space coordinates to align with.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.set_real_coordinates>', 'error': False}, {'id': 17, 'module_id': 1, 'docs_id': 82, 'type': 'function', 'name': 'extend_to', 'description': 'Creates a SizeExtensionConstraint that extends this object along a specified axis until it reaches another object or the simulation boundary.', 'signature': 'extend_to(self, other: Optional["SimulationObject"], axis: int, direction: Literal["+", "-"], other_position: float | None = None, offset: float = 0, grid_offset: int = 0) -> SizeExtensionConstraint', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 83, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'Optional["SimulationObject"]', 'docs_id': 84, 'description': 'Target object to extend to, or None to extend to simulation boundary.'}, {'name': 'axis', 'type': 'int', 'docs_id': 85, 'description': 'Axis to extend along (0, 1, or 2).'}, {'name': 'direction', 'type': 'Literal["+", "-"]', 'docs_id': 86, 'description': 'Direction to extend in (+ or -).'}, {'name': 'other_position', 'type': 'float | None', 'docs_id': 87, 'description': 'Relative position on target object (-1 to 1).', 'is_optional': True}, {'name': 'offset', 'type': 'float', 'docs_id': 88, 'description': 'Additional offset in meters.', 'default_value': '0'}, {'name': 'grid_offset', 'type': 'int', 'docs_id': 89, 'description': 'Additional offset in grid voxels.', 'default_value': '0'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.extend_to>', 'error': False}, {'id': 18, 'module_id': 1, 'docs_id': 90, 'type': 'function', 'name': 'check_overlap', 'description': 'Checks if this object overlaps with another object.', 'signature': 'check_overlap(self, other: "SimulationObject") -> bool', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 91, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 92, 'description': 'Another object to check for overlap.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.check_overlap>', 'error': False}, {'id': 19, 'module_id': 1, 'docs_id': 93, 'type': 'function', 'name': '__eq__', 'description': 'Checks for equality based on object names.', 'signature': '__eq__(self: Self, other: "SimulationObject") -> bool', 'parameters': [{'name': 'self', 'type': 'Self', 'docs_id': 94, 'description': 'The SimulationObject instance.'}, {'name': 'other', 'type': 'SimulationObject', 'docs_id': 95, 'description': 'Another object to compare.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.__eq__>', 'error': False}, {'id': 20, 'module_id': 1, 'docs_id': 96, 'type': 'function', 'name': '__hash__', 'description': "Returns the hash of the object's name.", 'signature': '__hash__(self) -> int', 'parameters': [{'name': 'self', 'type': 'SimulationObject', 'docs_id': 97, 'description': 'The SimulationObject instance.'}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/objects/base/<#fdtdx.objects.object.SimulationObject.__hash__>', 'error': False}]
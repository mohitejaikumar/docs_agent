[{'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.core.jax.utils', 'description': 'Utility functions for JAX.', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/utils/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'function', 'name': 'check_shape_dtype', 'description': 'Check the shape and dtype of an array.', 'signature': 'check_shape_dtype(array, shape, dtype)', 'parameters': [{'name': 'array', 'type': 'array', 'docs_id': 3, 'description': 'The array to check.', 'default_value': None, 'is_optional': False}, {'name': 'shape', 'type': 'tuple', 'docs_id': 4, 'description': 'The expected shape.', 'default_value': None, 'is_optional': False}, {'name': 'dtype', 'type': 'dtype', 'docs_id': 5, 'description': 'The expected dtype.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.jax.utils.check_shape_dtype', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 6, 'type': 'class', 'name': 'PaddingConfig', 'description': 'Configuration for padding.', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.misc.PaddingConfig', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 7, 'type': 'function', 'name': 'straight_through_estimator', 'description': 'Straight-through estimator for gradients.', 'signature': 'straight_through_estimator(x)', 'parameters': [{'name': 'x', 'type': 'array', 'docs_id': 8, 'description': 'The input array.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.jax.ste.straight_through_estimator', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.core.jax.utils', 'description': 'JAX Utilities', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#jax-utilities', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'function', 'name': 'check_shape_dtype', 'description': 'Validates that arrays match their expected shapes and dtypes. Checks each array in partial_value_dict against its corresponding shape and dtype specification in shape_dtype_dict. This is useful for validating that arrays match their expected specifications before using them in computations.', 'signature': 'check_shape_dtype(partial_value_dict: dict[str, jax.Array], shape_dtype_dict: dict[str, jax.ShapeDtypeStruct])', 'parameters': [{'name': 'partial_value_dict', 'type': 'dict[str, jax.Array]', 'docs_id': 3, 'description': 'Dictionary mapping names to JAX arrays to validate', 'default_value': None, 'is_optional': False}, {'name': 'shape_dtype_dict', 'type': 'dict[str, ShapeDtypeStruct]', 'docs_id': 4, 'description': 'Dictionary mapping names to ShapeDtypeStruct objects specifying the expected shape and dtype for each array', 'default_value': None, 'is_optional': False}], 'examples': [{'type': 'validation', 'code': 'shapes = {"x": jax.ShapeDtypeStruct((2,3), jnp.float32)} arrays = {"x": jnp.zeros((2,3), dtype=jnp.float32)} check_shape_dtype(arrays, shapes) # Passes bad = {"x": jnp.zeros((3,2))} # Wrong shape check_shape_dtype(bad, shapes) # Raises Exception', 'description': 'Example demonstrating the use of check_shape_dtype for validating array shapes and dtypes.'}], 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.jax.utils.check_shape_dtype', 'error': False}, {'id': 3, 'docs_id': 5, 'type': 'module', 'name': 'fdtdx.core.misc', 'description': 'Utility Classes', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#utility-classes', 'error': False}, {'id': 4, 'module_id': 3, 'docs_id': 6, 'type': 'class', 'name': 'PaddingConfig', 'description': 'Padding configuration. The order is: minx, maxx, miny, maxy, minz, maxz, ... or just single value that can be used for all', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.misc.PaddingConfig', 'error': False}, {'id': 5, 'docs_id': 7, 'type': 'module', 'name': 'fdtdx.core.jax.ste', 'description': 'Gradient Estimators', 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#gradient-estimators', 'error': False}, {'id': 6, 'module_id': 5, 'docs_id': 8, 'type': 'function', 'name': 'straight_through_estimator', 'description': 'Straight Through Estimator for gradient estimation with discrete variables. This function applies the straight through estimator (STE) by taking the gradient with respect to the continuous input `x`, while using the discrete values `y` in the forward pass. STE is commonly used in training neural networks with discrete/quantized values where standard backpropagation is not possible.', 'signature': 'straight_through_estimator(x: jax.Array, y: jax.Array) -> jax.Array', 'parameters': [{'name': 'x', 'type': 'jax.Array', 'docs_id': 9, 'description': 'jax.Array, the original continuous values before quantization/discretization. Gradients will be computed with respect to these values.', 'default_value': None, 'is_optional': False}, {'name': 'y', 'type': 'jax.Array', 'docs_id': 10, 'description': 'jax.Array, the discrete/quantized values used in the forward pass. Must have the same shape as x.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/core/jax/#fdtdx.core.jax.ste.straight_through_estimator', 'error': False}]
[{'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.core.physics', 'description': 'Module containing physical constants.', 'url': None, 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 1, 'type': 'class', 'name': 'UniformMaterial', 'description': 'Represents a material with uniform permittivity and permeability.', 'url': None, 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 1, 'type': 'class', 'name': 'Device', 'description': 'Represents a device consisting of voxels with different material properties.', 'url': None, 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 1, 'type': 'function', 'name': '__init__', 'description': 'Constructor for UniformMaterial.', 'signature': 'UniformMaterial(partial_real_shape, permittivity, permeability=1.0, color, name)', 'parameters': [{'name': 'partial_real_shape', 'type': 'tuple', 'docs_id': 4, 'description': 'Shape of the material.', 'default_value': None, 'is_optional': False}, {'name': 'permittivity', 'type': 'float', 'docs_id': 4, 'description': 'Permittivity of the material.', 'default_value': None, 'is_optional': False}, {'name': 'permeability', 'type': 'float', 'docs_id': 4, 'description': 'Permeability of the material.', 'default_value': '1.0', 'is_optional': True}, {'name': 'color', 'type': 'str', 'docs_id': 4, 'description': 'Color for plotting.', 'default_value': None, 'is_optional': False}, {'name': 'name', 'type': 'str', 'docs_id': 4, 'description': 'Name of the material.', 'default_value': None, 'is_optional': False}], 'examples': [{'type': 'Creating a UniformMaterial object', 'code': 'from fdtdx.core.physics import constants\nfrom fdtdx.objects.material import UniformMaterial\nfrom fdtdx.core.plotting import colors\n\nuniform_obj = UniformMaterial(\n  partial_real_shape=(0.6e-6, 0.6e-6, 0.6e-6),\n  permittivity=constants.relative_permittivity_silica,\n  # permeability is one by default\n  permeability=1.0,\n  color=colors.CYAN,\n  name="uniform_obj",\n)', 'description': 'This example shows how to create a UniformMaterial object with specified parameters.'}], 'url': None, 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 1, 'type': 'function', 'name': '__init__', 'description': 'Constructor for Device.', 'signature': 'Device(name, partial_real_shape, permittivity_config, constraint_mapping, partial_voxel_real_shape)', 'parameters': [{'name': 'name', 'type': 'str', 'docs_id': 5, 'description': 'Name of the device.', 'default_value': None, 'is_optional': False}, {'name': 'partial_real_shape', 'type': 'tuple', 'docs_id': 5, 'description': 'Shape of the device.', 'default_value': None, 'is_optional': False}, {'name': 'permittivity_config', 'type': 'dict', 'docs_id': 5, 'description': 'Dictionary defining permittivity options.', 'default_value': None, 'is_optional': False}, {'name': 'constraint_mapping', 'type': 'object', 'docs_id': 5, 'description': 'Mapping of latent parameters to permittivity choices.', 'default_value': None, 'is_optional': False}, {'name': 'partial_voxel_real_shape', 'type': 'tuple', 'docs_id': 5, 'description': 'Size of the voxels.', 'default_value': None, 'is_optional': False}], 'examples': [{'type': 'Creating a Device object', 'code': 'permittivity_config = {\n  "Air": constants.relative_permittivity_air,\n  "Polymer": constants.relative_permittivity_ma_N_1400_series,\n}\ndevice_scatter = Device(\n  name="Device",\n  partial_real_shape=(1e-6, 1e-6, 1e-6),\n  permittivity_config=permittivity_config,\n  constraint_mapping=...,\n  partial_voxel_real_shape=(0.2e-6, 0.2e-6, 0.2e-6),\n)', 'description': "This example shows how to create a Device object with specified parameters.  Note that 'constraint_mapping' is incomplete in this example."}], 'url': None, 'error': False}]
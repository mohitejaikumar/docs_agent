[{'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.constraints.utils', 'description': 'Utilities for constraints', 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'function', 'name': 'compute_allowed_indices', 'description': 'Compute allowed indices', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/<#fdtdx.constraints.utils.compute_allowed_indices>', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 3, 'type': 'function', 'name': 'compute_allowed_indices_without_holes', 'description': 'Compute allowed indices without holes', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/<#fdtdx.constraints.utils.compute_allowed_indices_without_holes>', 'error': False}, {'id': 4, 'module_id': 1, 'docs_id': 4, 'type': 'function', 'name': 'compute_allowed_indices_without_holes_single_polymer_columns', 'description': 'Compute allowed indices without holes for single polymer columns', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/<#fdtdx.constraints.utils.compute_allowed_indices_without_holes_single_polymer_columns>', 'error': False}, {'id': 5, 'module_id': 1, 'docs_id': 5, 'type': 'function', 'name': 'nearest_index', 'description': 'Find the nearest index', 'signature': None, 'parameters': [], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/<#fdtdx.constraints.utils.nearest_index>', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.constraints.utils', 'description': 'Constraint Utilities', 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 2, 'type': 'function', 'name': 'compute_allowed_indices', 'description': 'Compute allowed index combinations for multi-layer structures.', 'signature': 'fdtdx.constraints.utils.compute_allowed_indices(num_layers, indices, fill_holes_with_index, single_polymer_columns=False)', 'parameters': [{'name': 'num_layers', 'type': 'int', 'docs_id': 3, 'description': 'Number of vertical layers in the structure.', 'default_value': None, 'is_optional': False}, {'name': 'indices', 'type': 'Sequence[int]', 'docs_id': 4, 'description': 'Sequence of allowed material indices.', 'default_value': None, 'is_optional': False}, {'name': 'fill_holes_with_index', 'type': 'Sequence[int]', 'docs_id': 5, 'description': 'Indices that can be used to fill holes/gaps.', 'default_value': None, 'is_optional': False}, {'name': 'single_polymer_columns', 'type': 'bool', 'docs_id': 6, 'description': 'If True, restrict to single polymer columns.', 'default_value': 'False', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/#fdtdx.constraints.utils.compute_allowed_indices', 'error': False}, {'id': 3, 'module_id': 1, 'docs_id': 7, 'type': 'function', 'name': 'compute_allowed_indices_without_holes', 'description': 'Compute allowed indices for multi-layer structures without holes.\nGenerates valid index combinations ensuring no trapped air holes by filling gaps with specified indices. Shows progress with a tqdm progress bar.', 'signature': 'fdtdx.constraints.utils.compute_allowed_indices_without_holes(num_layers, indices, fill_holes_with_index)', 'parameters': [{'name': 'num_layers', 'type': 'int', 'docs_id': 8, 'description': 'Number of vertical layers in the structure.', 'default_value': None, 'is_optional': False}, {'name': 'indices', 'type': 'Sequence[int]', 'docs_id': 9, 'description': 'Sequence of allowed material indices.', 'default_value': None, 'is_optional': False}, {'name': 'fill_holes_with_index', 'type': 'Sequence[int]', 'docs_id': 10, 'description': 'Indices that can be used to fill holes/gaps.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/#fdtdx.constraints.utils.compute_allowed_indices_without_holes', 'error': False}, {'id': 1, 'docs_id': 1, 'type': 'module', 'name': 'fdtdx.constraints.utils', 'description': None, 'url': None, 'error': False}, {'id': 1, 'module_id': 1, 'docs_id': 2, 'type': 'function', 'name': 'compute_allowed_indices_without_holes_single_polymer_columns', 'description': 'Compute allowed indices for single polymer column structures without holes.', 'signature': 'compute_allowed_indices_without_holes_single_polymer_columns(num_layers: int, indices: Sequence[int], fill_holes_with_index: Sequence[int]) -> jax.Array', 'parameters': [{'name': 'num_layers', 'type': 'int', 'docs_id': 3, 'description': 'Number of vertical layers in the structure.', 'default_value': None, 'is_optional': False}, {'name': 'indices', 'type': 'Sequence[int]', 'docs_id': 4, 'description': 'Sequence of allowed material indices.', 'default_value': None, 'is_optional': False}, {'name': 'fill_holes_with_index', 'type': 'Sequence[int]', 'docs_id': 5, 'description': 'Indices that can be used to fill holes/gaps.', 'default_value': None, 'is_optional': False}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/#fdtdx.constraints.utils.compute_allowed_indices_without_holes_single_polymer_columns', 'error': False}, {'id': 2, 'module_id': 1, 'docs_id': 6, 'type': 'function', 'name': 'nearest_index', 'description': 'Find nearest allowed indices for given values based on distance metrics.', 'signature': 'nearest_index(values: jax.Array, allowed_values: jax.Array, axis: int | None = None, allowed_indices: jax.Array | None = None, return_distances: bool = False, distance_metric: Literal["euclidean", "permittivity_differences_plus_average_permittivity"] = "permittivity_differences_plus_average_permittivity") -> jax.Array | tuple[jax.Array, jax.Array]', 'parameters': [{'name': 'values', 'type': 'Array', 'docs_id': 7, 'description': 'Input array of values to match.', 'default_value': None, 'is_optional': False}, {'name': 'allowed_values', 'type': 'Array', 'docs_id': 8, 'description': 'Array of allowed values to match against.', 'default_value': None, 'is_optional': False}, {'name': 'axis', 'type': 'int | None', 'docs_id': 9, 'description': 'Axis along which to compute distances. Required if using allowed_indices.', 'default_value': 'None', 'is_optional': True}, {'name': 'allowed_indices', 'type': 'Array | None', 'docs_id': 10, 'description': 'Optional array of allowed indices per position.', 'default_value': 'None', 'is_optional': True}, {'name': 'return_distances', 'type': 'bool', 'docs_id': 11, 'description': 'If True, return both indices and distances.', 'default_value': 'False', 'is_optional': True}, {'name': 'distance_metric', 'type': 'Literal["euclidean", "permittivity_differences_plus_average_permittivity"]', 'docs_id': 12, 'description': 'Method to compute distances between values: - "euclidean": Standard Euclidean distance - "permittivity_differences_plus_average_permittivity": Special metric for permittivity optimization combining differences and averages.', 'default_value': '"permittivity_differences_plus_average_permittivity"', 'is_optional': True}], 'examples': [], 'url': 'https://ymahlau.github.io/fdtdx/api/constraints/utils/#fdtdx.constraints.utils.nearest_index', 'error': False}]